import base64
from binascii import *

encrypted_msg = "EREiIiIjRWeJEjRWeJq83hsiUlyvWfBkagb+1OjnejystJlHHAkiFsPhCxB3m4+EQvgITO3uS9IIDb55vvKkdg159xEX4EcMTOX6OUbwWRFSVr1u12ZGeVZdn5UgogsqnBgZB5f5Pk0nYJjk8AN+Rjy9xYnDotMMkt+lUSjg5ZjKzsueMC92R6cV6eNvQrm+GgJ0irLLWnHlB3nxMMcxXjb9Gy+IXazIHvYX4BOg66Ox57AXJHB2+k0XMP+yV4bryf1itKZQKVkSSwUNMglZyvxImzMOovW4yNCjKKHraOZXgqNd3x5j9smqZoablZJLjd5EH6LvyciCqgme5OVD0HA4vySGScBoBqw7isBKIyLA8qvWyqOAAcMtbCyKpXXaxmKj8aWfIEBO0yMMmxrMV71Ru3u90Bmr+3FpQrlQHCvKrA9KMzSa+L1WarAEG64WjygW9cmnz3ZfITygVo7fVXJ3yg8pFY/kYVgbF2+SlkRNbvUz8UPtHSzQgMse2UUa"

encrypted_msg_decoded = base64.b64decode(encrypted_msg)

encrypted_msg_decoded_bytearr = bytearray(encrypted_msg_decoded)

iv = encrypted_msg_decoded_bytearr[:16]

# b)
P0 = bytes("Content-Type: mu", 'UTF-8')
X = bytes(a ^ b for a, b in zip(iv, P0))

# Split the original msg into 16 bytes chunks and display them
info = [encrypted_msg_decoded_bytearr[i:i + 16] for i in range(0, len(encrypted_msg_decoded_bytearr), 16)]

solution_b = X + encrypted_msg_decoded_bytearr[16:]

"""
Falls der Code nicht funktioniert:
info_copy = info
info_copy[0] = X

solution_b = bytearray()
for byte_chunk in info_copy:
    solution_b.extend(byte_chunk)

"""

print(f"Solution for b) in base64: {base64.b64encode(solution_b)}")

# c)
Pc0 = bytes("<h1>test</h1>", 'UTF-8')
X0 = bytes(a ^ b for a, b in zip(X, Pc0))

Pc1 = bytes("<h1>kkkkkkk</h1>", 'UTF-8')
X1 = bytes(a ^ b for a, b in zip(X, Pc1))


print(f"X0: {hexlify(X0, ' ', 2)}")

solution_c = X0 + info[1] + X1 + info[1] + encrypted_msg_decoded_bytearr[16:]

print(f"solution_c in base64: {base64.b64encode(solution_c)}")




